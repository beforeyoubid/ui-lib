import { type Icon } from '../types';

export const PPT: Icon = props => {
  const size = props.size ?? 24;
  const sizeAsNum = typeof size === 'number' ? size : Number(size.replace(/\w+/g, ''));
  return (
    <svg
      width={sizeAsNum}
      height={sizeAsNum}
      viewBox="0 0 29 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={props.className}
    >
      <path
        d="M6.01103 2.39454C6.01103 1.31642 6.88502 0.44243 7.96314 0.44243H19.5073C19.6244 0.44243 19.7376 0.484441 19.8263 0.560826L27.354 7.04212C27.399 7.0809 27.4249 7.13738 27.4249 7.19681V21.6056C27.4249 22.6837 26.5509 23.5577 25.4728 23.5577H7.96314C6.88502 23.5577 6.01103 22.6837 6.01103 21.6056V2.39454Z"
        fill="white"
        stroke="#D0D5DD"
        strokeWidth="0.900974"
      />
      <path
        d="M19.5078 0.292236V4.7943C19.5078 6.12122 20.5835 7.1969 21.9104 7.1969H27.5272"
        stroke="#D0D5DD"
        strokeWidth="0.900974"
      />
      <rect x="3.13965" y="10.4011" width="14.6039" height="10.4026" rx="1.2013" fill="#E62E05" />
      <path
        d="M5.51946 13.3499H6.94901C7.15323 13.3499 7.34944 13.37 7.53764 13.41C7.72985 13.45 7.89803 13.5181 8.04219 13.6142C8.18634 13.7063 8.30047 13.8325 8.38456 13.9926C8.47265 14.1488 8.5167 14.345 8.5167 14.5813C8.5167 14.8496 8.47065 15.0658 8.37855 15.23C8.28645 15.3942 8.16232 15.5223 8.00615 15.6144C7.84998 15.7025 7.66778 15.7625 7.45956 15.7946C7.25534 15.8266 7.04111 15.8426 6.81686 15.8426H6.27628V17.6025H5.51946V13.3499ZM6.73277 15.1939C6.84089 15.1939 6.95301 15.1899 7.06914 15.1819C7.18526 15.1739 7.29138 15.1499 7.38748 15.1098C7.48759 15.0698 7.56767 15.0097 7.62774 14.9296C7.69181 14.8496 7.72384 14.7374 7.72384 14.5933C7.72384 14.4611 7.69581 14.357 7.63975 14.2809C7.58369 14.2009 7.51161 14.1408 7.42352 14.1008C7.33542 14.0567 7.23732 14.0287 7.1292 14.0167C7.02108 14.0046 6.91697 13.9986 6.81686 13.9986H6.27628V15.1939H6.73277ZM9.1914 13.3499H10.6209C10.8252 13.3499 11.0214 13.37 11.2096 13.41C11.4018 13.45 11.57 13.5181 11.7141 13.6142C11.8583 13.7063 11.9724 13.8325 12.0565 13.9926C12.1446 14.1488 12.1886 14.345 12.1886 14.5813C12.1886 14.8496 12.1426 15.0658 12.0505 15.23C11.9584 15.3942 11.8343 15.5223 11.6781 15.6144C11.5219 15.7025 11.3397 15.7625 11.1315 15.7946C10.9273 15.8266 10.713 15.8426 10.4888 15.8426H9.94822V17.6025H9.1914V13.3499ZM10.4047 15.1939C10.5128 15.1939 10.6249 15.1899 10.7411 15.1819C10.8572 15.1739 10.9633 15.1499 11.0594 15.1098C11.1595 15.0698 11.2396 15.0097 11.2997 14.9296C11.3637 14.8496 11.3958 14.7374 11.3958 14.5933C11.3958 14.4611 11.3678 14.357 11.3117 14.2809C11.2556 14.2009 11.1836 14.1408 11.0955 14.1008C11.0074 14.0567 10.9093 14.0287 10.8011 14.0167C10.693 14.0046 10.5889 13.9986 10.4888 13.9986H9.94822V15.1939H10.4047ZM13.7343 14.0347H12.4309V13.3499H15.7945V14.0347H14.4911V17.6025H13.7343V14.0347Z"
        fill="white"
      />
    </svg>
  );
};
