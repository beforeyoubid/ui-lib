import { type Icon } from '../types';

export const XLSX: Icon = props => {
  const size = props.size ?? 24;
  const sizeAsNum = typeof size === 'number' ? size : Number(size.replace(/\w+/g, ''));
  return (
    <svg
      width={sizeAsNum}
      height={sizeAsNum}
      viewBox="0 0 29 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={props.className}
    >
      <path
        d="M5.80205 2.39454C5.80205 1.31642 6.67604 0.44243 7.75416 0.44243H19.2983C19.4154 0.44243 19.5286 0.484441 19.6173 0.560826L27.145 7.04212C27.19 7.0809 27.2159 7.13738 27.2159 7.19681V21.6056C27.2159 22.6837 26.3419 23.5577 25.2638 23.5577H7.75416C6.67604 23.5577 5.80205 22.6837 5.80205 21.6056V2.39454Z"
        fill="white"
        stroke="#D0D5DD"
        strokeWidth="0.900974"
      />
      <path
        d="M19.2988 0.292236V4.7943C19.2988 6.12122 20.3745 7.1969 21.7014 7.1969H27.3182"
        stroke="#D0D5DD"
        strokeWidth="0.900974"
      />
      <rect x="3.37109" y="10.4011" width="18.6039" height="10.4026" rx="1.2013" fill="#099250" />
      <path
        d="M6.79275 15.3801L5.37522 13.3499H6.33025L7.33334 14.9236L8.32441 13.3499H9.2434L7.8499 15.3801L9.39357 17.6025H8.43253L7.30931 15.8066L6.1921 17.6025H5.27912L6.79275 15.3801ZM9.8655 13.3499H10.6223V16.9178H12.4303V17.6025H9.8655V13.3499ZM15.0644 14.2629C14.9844 14.1468 14.8762 14.0627 14.7401 14.0107C14.608 13.9546 14.4678 13.9266 14.3196 13.9266C14.2315 13.9266 14.1455 13.9366 14.0614 13.9566C13.9813 13.9766 13.9072 14.0087 13.8391 14.0527C13.7751 14.0967 13.723 14.1548 13.683 14.2269C13.6429 14.295 13.6229 14.3771 13.6229 14.4732C13.6229 14.6173 13.6729 14.7274 13.773 14.8035C13.8732 14.8796 13.9973 14.9457 14.1455 15.0017C14.2936 15.0578 14.4558 15.1118 14.632 15.1639C14.8082 15.216 14.9703 15.288 15.1185 15.3801C15.2667 15.4722 15.3908 15.5944 15.4909 15.7465C15.591 15.8987 15.6411 16.1009 15.6411 16.3532C15.6411 16.5814 15.599 16.7817 15.5149 16.9538C15.4308 17.122 15.3167 17.2622 15.1726 17.3743C15.0324 17.4864 14.8682 17.5705 14.68 17.6266C14.4918 17.6826 14.2936 17.7107 14.0854 17.7107C13.8211 17.7107 13.5668 17.6666 13.3226 17.5785C13.0783 17.4904 12.8681 17.3423 12.6919 17.134L13.2625 16.5814C13.3546 16.7216 13.4747 16.8317 13.6229 16.9118C13.7751 16.9879 13.9352 17.0259 14.1034 17.0259C14.1915 17.0259 14.2796 17.0139 14.3677 16.9899C14.4558 16.9659 14.5359 16.9298 14.608 16.8818C14.68 16.8337 14.7381 16.7736 14.7821 16.7016C14.8262 16.6255 14.8482 16.5394 14.8482 16.4433C14.8482 16.2871 14.7982 16.167 14.698 16.0829C14.5979 15.9988 14.4738 15.9287 14.3256 15.8727C14.1775 15.8126 14.0153 15.7565 13.8391 15.7045C13.6629 15.6524 13.5008 15.5824 13.3526 15.4943C13.2044 15.4022 13.0803 15.282 12.9802 15.1339C12.8801 14.9817 12.83 14.7795 12.83 14.5272C12.83 14.307 12.8741 14.1168 12.9622 13.9566C13.0543 13.7964 13.1724 13.6643 13.3166 13.5602C13.4647 13.4521 13.6329 13.372 13.8211 13.3199C14.0093 13.2679 14.2015 13.2418 14.3977 13.2418C14.622 13.2418 14.8382 13.2759 15.0464 13.3439C15.2587 13.412 15.4489 13.5241 15.617 13.6803L15.0644 14.2629ZM17.4684 15.3801L16.0508 13.3499H17.0059L18.0089 14.9236L19 13.3499H19.919L18.5255 15.3801L20.0692 17.6025H19.1081L17.9849 15.8066L16.8677 17.6025H15.9547L17.4684 15.3801Z"
        fill="white"
      />
    </svg>
  );
};
